<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Django | 谋定而后动]]></title>
  <link href="http://yuanotes.github.com/blog/categories/django/atom.xml" rel="self"/>
  <link href="http://yuanotes.github.com/"/>
  <updated>2012-10-12T00:28:42+08:00</updated>
  <id>http://yuanotes.github.com/</id>
  <author>
    <name><![CDATA[Brooklyn]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Django的language code设置]]></title>
    <link href="http://yuanotes.github.com/blog/2011/10/25/django%E7%9A%84language-code%E8%AE%BE%E7%BD%AE/"/>
    <updated>2011-10-25T00:00:00+08:00</updated>
    <id>http://yuanotes.github.com/blog/2011/10/25/django的language-code设置</id>
    <content type="html"><![CDATA[<p>如果需要给Django设置中文i18n，在settings.py里面设置<code>LANGUAGE_CODE = 'zh-cn'</code> 即可。</p>




<p>但是有个很严重的问题。那就是在<code>locale</code>这个目录下的目录名称跟<code>LANGUAGE_CODE</code>是不一样的。</p>




<p>在<code>settings.py</code>设置的中文是:
<pre lang="python">
LANGUAGE_code = 'zh-cn'
</pre></p>




<p>但是<code>locale</code>下的中文语言目录名称却不能和它一样，必须设置成<code>zh_CN</code>，至少在我的服务器上是如此，可能跟系统的<code>locale</code>有关系。</p>




<p>Django官方没找到这方面的文档，因为
<pre lang="python">
python manage.py makemessages -a
</pre>
会自动设置目录名称，这个问题并不多见。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Django中model空值表示]]></title>
    <link href="http://yuanotes.github.com/blog/2011/09/13/django%E4%B8%ADblanktrue%E4%BB%A5%E5%8F%8Anulltrue/"/>
    <updated>2011-09-13T00:00:00+08:00</updated>
    <id>http://yuanotes.github.com/blog/2011/09/13/django中blanktrue以及nulltrue</id>
    <content type="html"><![CDATA[<p>在django的model.py中有个很奇怪的地方，那就是设置一个可以为空的值时，有一个blank=True为什么还需要一个null=True呢？</p>




<p>官方文档这么解释这个问题：
<ol>
    <li>blank主要是用来验证的，也就是用作ModelForm的时候验证用户的输入，如果不是用户输入甚至可以免掉blank=True(我自己还没有验证，一般都加上)。</li>
    <li>null主要是基于数据库层面的，也就是是否可以在数据库里面存储空值(NULL)。</li>
    <li>另外，除了oracle的数据库之外，string的field如CharField和TextField存在数据库里的都是empty string，这是django为了给string的field寻求一个统一的空值。</li>
</ol></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Django的blocktrans语法]]></title>
    <link href="http://yuanotes.github.com/blog/2011/09/13/blocktrans/"/>
    <updated>2011-09-13T00:00:00+08:00</updated>
    <id>http://yuanotes.github.com/blog/2011/09/13/blocktrans</id>
    <content type="html"><![CDATA[<p>官方文档的blocktrans的的标签在django1.2.5和1.3中不一太一样。</p>




<p>blocktrans的标签中中不支持访问变量名的属性以及list或者dict的成员，也就是user.email这种写法是不允许的。</p>




<p>文档中实例代码是这样的，这种在1.2.5中不支持，但是在1.3中是支持的：
<pre lang="html">
{% blocktrans with amount=article.price count years=i.length %}
...
{% endblocktrans %}
</pre></p>




<p>在1.2.5中必须用老的语法：
<pre lang="html">
{% blocktrans with article.price as amount count i.length as year %}
..
{% endblocktrans %}
</pre></p>




<p>另外，老的语法中,with A as B [and C as D] 中的 and 不能跟count写在一起。可以理解为count和with是两个单独的函数，只能并列放着，我没有看源代码，只是个人理解。新版本的新语法比较简洁，如果没有必要一定要守着1.2.5的话，升到1.3还是不错的。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Django如何管理静态文件]]></title>
    <link href="http://yuanotes.github.com/blog/2011/03/28/django%E5%A6%82%E4%BD%95%E7%AE%A1%E7%90%86css%E7%AD%89%E9%9D%99%E6%80%81%E6%96%87%E4%BB%B6/"/>
    <updated>2011-03-28T00:00:00+08:00</updated>
    <id>http://yuanotes.github.com/blog/2011/03/28/django如何管理css等静态文件</id>
    <content type="html"><![CDATA[<p>Django的template确实很强大，但是我们不可能把CSS文件也嵌入到template中。</p>




<p>但是CSS又不能简单的放在template目录下让template调用，因为django的目录结构是由urls.py这个文件来指定的，凡是没有指定的路径，外界都不能访问。</p>




<p>所以，最好的办法，是指定一个目录，该目录下所有的文件都能够被匿名用户访问。</p>




<p>虽然django的官方文档很详细，但是，一般人还是很难看懂其中staticfiles app到底是在扯什么东西。</p>




<p>好在django默认建立的project的settings.py文件中有MEDIA_ROOT，MEDIA_URL等选项。去网上搜索了一把，找到了<a href="http://twigstechtips.blogspot.com/2009/08/django-how-to-serve-media-files-css.html">一篇文章</a>（墙外），差不多可以解决这个问题。虽然，貌似没有staticfiles神马的用起来方便。</p>




<p>首先，在settings.py文件中定义（以下代码都是写文章时候手打的，如有错误请留言指正）
<pre lang="python">
MEDIA_ROOT=os.path.join(os.path.dirname(__file__),'media').replace('\\','/') #如果是*nix系统，不需要replace函数
MEDIA_URL='/media/' #末尾一定要加上/
ADMIN_MEDIA_PREFIX = '/media/admin/' #填啥都可以，就是不能跟MEDIA_URL一样
</pre></p>




<p>然后，在urls.py文件中：
<pre lang="python">
from django.views.static import * 
from django.conf import settings</pre></p>




<p>#...<br />
#以下是urlpatterns中的<br />
(r'^media/(?P<path>.*)$', 'django.views.static.serve', {'document_root': settings.MEDIA_ROOT}),
</path></p>




<p>做完这些之后，测试一下 yourdomain.com/media/default.css<br />
仅仅输入 yourdomain.com/media/ 是看不到任何东西的。</p>




<p>最后，如果没有什么问题，那么，在template的html文件中，可以直接这么调用css以及image等文件啦，
<pre lang="html">
<link rel="stylesheet" type="text/css" href="http://yuanotes.github.com/media/css/default.css" />
</pre></p>




<p></p>

]]></content>
  </entry>
  
</feed>
